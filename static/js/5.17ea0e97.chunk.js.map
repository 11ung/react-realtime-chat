{"version":3,"sources":["layouts/HomeLayout/index.jsx","contexts/index.jsx","contexts/MessengerContext.jsx","actions/message.jsx"],"names":["Home","delayImport","HomeLayout","doGetUserInfo","useContext","AuthContext","useEffect","path","exact","to","component","MessengerContext","createContext","MessengerProvider","children","useState","allMessages","setAllMessages","conversation","setConversation","inboxeDetail","setInboxDetail","doSendMessage","payload","callback","a","sendMessage","response","data","status","doGetInboxDetail","id","getInboxDetail","doGetListInbox","getListInbox","Provider","value","axios","post","API_MESSAGE","authHeaders","recipientId","get","GET_INBOX","replace","GET_LIST_INBOX"],"mappings":"sHAAA,iDAIMA,EAAOC,YAAY,+BA0BVC,UAxBI,WAAO,IACfC,EAAiBC,qBAAWC,KAA5BF,cAQP,OALAG,qBAAU,WACNH,MACF,IAIE,8BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOI,KAAK,IAAIC,OAAK,EAArB,SACI,cAAC,IAAD,CAAUC,GAAG,YAEjB,cAAC,IAAD,CAAOF,KAAK,QAAQC,OAAK,EAACE,UAAWV,IACrC,cAAC,IAAD,CAAOO,KAAK,IAAZ,SACI,cAAC,IAAD,CAAUE,GAAG,wB,iCCvBjC,kJ,iKCGaE,EAAmBC,0BAEnBC,EAAoB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACTC,mBAAS,IADA,mBACxCC,EADwC,KAC3BC,EAD2B,OAEPF,mBAAS,MAFF,mBAExCG,EAFwC,KAE1BC,EAF0B,OAGRJ,mBAAS,IAHD,mBAGxCK,EAHwC,KAG1BC,EAH0B,KAKzCC,EAAa,uCAAG,WAAOC,EAASC,GAAhB,mBAAAC,EAAA,mEAEVF,EAFU,gCAGaG,YAAYH,GAHzB,OAGJI,EAHI,OAIFC,EAAiBD,EAAjBC,KAAMC,EAAWF,EAAXE,OACVD,GAAmB,MAAXC,GACJL,GACAA,IAPE,gHAAH,wDAebM,EAAgB,uCAAG,WAAOC,EAAIP,GAAX,mBAAAC,EAAA,6DACrBJ,EAAe,IADM,SAEEW,YAAeD,GAFjB,OAEfJ,EAFe,OAGbC,EAAiBD,EAAjBC,KAAMC,EAAWF,EAAXE,OACVD,GAAmB,MAAXC,IACRR,EAAeO,GACXJ,GACAA,KAPa,2CAAH,wDAWhBS,EAAc,uCAAG,WAAOT,GAAP,mBAAAC,EAAA,sEACIS,cADJ,OACbP,EADa,OAEXC,EAAiBD,EAAjBC,KAAMC,EAAWF,EAAXE,OACVD,GAAmB,MAAXC,IACRZ,EAAeW,GACXJ,GACAA,EAASI,IANE,2CAAH,sDAUpB,OACI,cAACjB,EAAiBwB,SAAlB,CACIC,MAAO,CACHpB,cACAI,eACAF,eACAC,kBACAG,gBACAQ,mBACAG,iBACAZ,kBATR,SAYKP,M,+MCvDAY,EAAc,SAACE,GACxB,OAAOS,IAAMC,KAAKC,IAAaX,EAAMY,gBAG5BR,EAAiB,SAACS,GAC3B,OAAOJ,IAAMK,IAAIC,IAAUC,QAAQ,eAAgBH,GAAcD,gBAGxDN,EAAe,WACxB,OAAOG,IAAMK,IAAIG,IAAgBL","file":"static/js/5.17ea0e97.chunk.js","sourcesContent":["import { AuthContext } from 'contexts';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { delayImport } from \"utils\";\r\nconst Home = delayImport(import('pages/Home'));\r\n\r\nconst HomeLayout = () => {\r\n    const {doGetUserInfo} = useContext(AuthContext);\r\n    \r\n    /*eslint-disable */\r\n    useEffect(() => {\r\n        doGetUserInfo();\r\n    },[])\r\n     /*eslint-enable */\r\n\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    <Redirect to=\"/home\" />\r\n                </Route>\r\n                <Route path=\"/home\" exact component={Home} />\r\n                <Route path=\"*\">\r\n                    <Redirect to=\"/not-found\" />\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeLayout;","export { MessengerContext } from 'contexts/MessengerContext';\r\nexport { HomeContext } from 'contexts/HomeContext';\r\nexport { AuthContext } from 'contexts/AuthContext';","import { getInboxDetail, getListInbox, sendMessage } from \"actions\";\r\nimport { createContext, useState } from \"react\";\r\n\r\nexport const MessengerContext = createContext();\r\n\r\nexport const MessengerProvider = ({ children }) => {\r\n    const [allMessages, setAllMessages] = useState([]);\r\n    const [conversation, setConversation] = useState(null);\r\n    const [inboxeDetail, setInboxDetail] = useState([]);\r\n\r\n    const doSendMessage = async (payload, callback) => {\r\n        try {\r\n            if (payload) {\r\n                const response = await sendMessage(payload);\r\n                const { data, status } = response;\r\n                if (data && status === 200) {\r\n                    if (callback)\r\n                        callback();\r\n                }\r\n            }\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    const doGetInboxDetail = async (id, callback) => {\r\n        setInboxDetail([]);\r\n        const response = await getInboxDetail(id);\r\n        const { data, status } = response;\r\n        if (data && status === 200) {\r\n            setInboxDetail(data)\r\n            if (callback)\r\n                callback();\r\n        }\r\n    }\r\n\r\n    const doGetListInbox = async (callback) => {\r\n        const response = await getListInbox();\r\n        const { data, status } = response;\r\n        if (data && status === 200) {\r\n            setAllMessages(data);\r\n            if (callback)\r\n                callback(data);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <MessengerContext.Provider\r\n            value={{\r\n                allMessages,\r\n                inboxeDetail,\r\n                conversation,\r\n                setConversation,\r\n                doSendMessage,\r\n                doGetInboxDetail,\r\n                doGetListInbox,\r\n                setInboxDetail\r\n            }}\r\n        >\r\n            {children}\r\n        </MessengerContext.Provider>\r\n    )\r\n}","import axios from \"axios\"\r\nimport { API_MESSAGE, GET_INBOX, GET_LIST_INBOX } from \"utils\";\r\nimport { authHeaders } from \"./auth\";\r\n\r\nexport const sendMessage = (data) => {\r\n    return axios.post(API_MESSAGE, data, authHeaders());\r\n}\r\n\r\nexport const getInboxDetail = (recipientId) => {\r\n    return axios.get(GET_INBOX.replace(\":recipientId\", recipientId), authHeaders());\r\n}\r\n\r\nexport const getListInbox = () => {\r\n    return axios.get(GET_LIST_INBOX, authHeaders());\r\n}\r\n"],"sourceRoot":""}