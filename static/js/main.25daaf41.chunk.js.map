{"version":3,"sources":["actions/auth.jsx","utils/constants.jsx","utils/cookie.jsx","utils/index.jsx","contexts/HomeContext.jsx","contexts/AuthContext.jsx","index.tsx"],"names":["authHeaders","headers","getCookie","ACCESS_TOKEN","login","payload","axios","post","LOGIN","logout","LOGOUT","register","API_USERS","getUserInfo","get","GET_USER_INFO","API_BASE_URL","API_MESSAGE","GET_INBOX","GET_LIST_INBOX","name","parts","document","cookie","split","length","decodeURIComponent","pop","shift","getToken","createCookie","value","removeCookie","delayImport","comp","lazy","Promise","all","resolve","setTimeout","then","socket","io","transports","path","auth","token","HomeContext","createContext","HomeContextProvider","children","useState","isLoading","setIsLoading","Provider","AuthContext","AuthContextProvider","userInfo","setUserInfo","doLogin","callback","a","response","data","status","doRegister","doGetUserInfo","NotFound","AuthenticationLayout","HomeLayout","customHistory","createBrowserHistory","PrivateRouter","Component","component","rest","render","props","to","LoginRouter","AppRootWithRouter","withRouter","Root","fallback","history","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.25daaf41.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { ACCESS_TOKEN, API_USERS, getCookie, GET_USER_INFO, LOGIN, LOGOUT } from 'utils';\r\n\r\nexport const authHeaders = () => {\r\n    return {\r\n        headers: {\r\n            'Authorization': `Bearer ${getCookie(ACCESS_TOKEN)}`\r\n        }\r\n    }\r\n}\r\n\r\nexport const login = payload => {\r\n    return axios.post(LOGIN, payload);\r\n}\r\n\r\nexport const logout = () => {\r\n    return axios.post(LOGOUT,null, authHeaders());\r\n}\r\n\r\nexport const register = payload => {\r\n    return axios.post(API_USERS, payload);\r\n}\r\n\r\nexport const getUserInfo = () => {\r\n    return axios.get(GET_USER_INFO, authHeaders());\r\n}\r\n\r\n","export const ACCESS_TOKEN = \"ACCESS_TOKEN\";\r\nexport const DISPLAY_DATE = \"HH:mm, DD-MM-YYYY \";\r\n\r\nconst API_BASE_URL = `/api`;\r\nexport const LOGIN = `${API_BASE_URL}/users/login`;\r\nexport const LOGOUT =  `${API_BASE_URL}/users/logout`;\r\nexport const GET_USER_INFO =  `${API_BASE_URL}/users/me`;\r\nexport const API_USERS =  `${API_BASE_URL}/users`;\r\n\r\nexport const API_MESSAGE =  `${API_BASE_URL}/messages`;\r\nexport const GET_INBOX =  `${API_BASE_URL}/messages/inbox/detail/:recipientId`;\r\nexport const GET_LIST_INBOX =  `${API_BASE_URL}/messages/inbox/list`;\r\n\r\n","import { ACCESS_TOKEN } from \"utils\";\n\nexport const getCookie = name => {\n    const value = \"; \" + document.cookie;\n    const parts = value.split(\"; \" + name + \"=\");\n\n    if (parts.length === 2) return decodeURIComponent(parts.pop().split(\";\").shift());\n}\n\nexport const getToken = () => {\n    const accessToken = getCookie(ACCESS_TOKEN);\n\n    return accessToken  || null;\n}\n\n\nexport const createCookie = (name, value) => {\n\tdocument.cookie = name + \"=\" + value + \"; path=/\";\n}\n\nexport const removeCookie = name => {\n    createCookie(name, \"\", -1);\n}\n\nexport const removeAll = () => {\n    removeCookie(ACCESS_TOKEN);\n}","import { lazy } from \"react\";\r\n\r\nexport const delayImport = (comp) => lazy(() => {\r\n    return Promise.all([\r\n        comp,\r\n        new Promise(resolve => setTimeout(resolve, 250))\r\n    ]).then(([moduleExports]) => moduleExports);\r\n});\r\n\r\nexport * from 'utils/constants';\r\nexport * from 'utils/cookie';\r\n","import { createContext, useState } from \"react\";\r\nimport { AuthContextProvider } from \"./AuthContext\";\r\nimport io  from 'socket.io-client';\r\nimport { getToken } from 'utils';\r\nconst socket = io('/', {\r\n    transports: ['websocket'],\r\n    path: '/socket', // added this line of code\r\n    auth: {token: getToken()}\r\n});\r\n\r\nexport const HomeContext = createContext();\r\n\r\nexport const HomeContextProvider = ({ children }) => {\r\n    const [isLoading, setIsLoading] = useState();\r\n\r\n    return (\r\n        <HomeContext.Provider \r\n            value={{ \r\n                isLoading, \r\n                socket,\r\n                setIsLoading \r\n            }}\r\n        >\r\n            <AuthContextProvider>\r\n                {children}\r\n            </AuthContextProvider>\r\n        </HomeContext.Provider>\r\n    )\r\n}","import { getUserInfo, login, register } from \"actions/auth\";\r\nimport { createContext, useState } from \"react\";\r\nimport { ACCESS_TOKEN, createCookie } from \"utils\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n    const [userInfo, setUserInfo] = useState({});\r\n\r\n    const doLogin = async (payload, callback) => {\r\n        try {\r\n            const response = await login(payload);\r\n            const { data, status } = response;\r\n            if(data && status === 200){\r\n                createCookie(ACCESS_TOKEN, data.token);\r\n                if(callback)\r\n                    callback();\r\n            }\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    const doRegister = async (payload, callback) => {\r\n        try {\r\n            const response = await register(payload);\r\n            const { status } = response;\r\n            if(status === 201){\r\n                if(callback)\r\n                    callback();\r\n            }\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    const doGetUserInfo =  async () => {\r\n        try {\r\n            const response = await getUserInfo();\r\n            const { data, status } = response;\r\n            if(data && status === 200){\r\n                setUserInfo(data);\r\n            }\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                userInfo,\r\n                doLogin,\r\n                doRegister,\r\n                doGetUserInfo\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router, withRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { ACCESS_TOKEN, delayImport, getCookie } from 'utils';\nimport 'assets/styles/index.scss';\nimport { HomeContextProvider } from 'contexts/HomeContext';\n\nconst NotFound = delayImport(import('pages/NotFound'));\nconst AuthenticationLayout = delayImport(import('layouts/AuthenticationLayout'));\nconst HomeLayout = delayImport(import('layouts/HomeLayout'));\n\nconst customHistory = createBrowserHistory();\n\nconst PrivateRouter = ({ component: Component, ...rest }: any) => (\n  <Route {...rest} render={(props) => {\n    const auth = getCookie(ACCESS_TOKEN);\n    \n\t\treturn auth ?\t<Component {...props} /> : <Redirect to=\"/authentication\" />\n\t}} />\n)\n\nconst LoginRouter = ({ component: Component, ...rest }: any) => (\n  <Route {...rest} render={(props) => {\n    const auth = getCookie(ACCESS_TOKEN);\n\n\t\treturn auth ?\t<Redirect to=\"/\" /> : <Component {...props} />\n\t}} />\n)\n\nconst App = () => {\n  return (\n    <>\n      <Switch>\n        <LoginRouter path=\"/not-found\" component={NotFound} />\n        <LoginRouter path=\"/authentication\" component={AuthenticationLayout}/>\n        <PrivateRouter path=\"/\" component={HomeLayout} />\n      </Switch>\n    </>\n  )\n}\n\nconst AppRootWithRouter = withRouter(App);\n\nconst Root = () => {\n  return (\n    <>\n      <Suspense fallback={<div>Loading...</div>}>\n          <HomeContextProvider>\n            <Router history={customHistory}>\n              <AppRootWithRouter />\n            </Router>\n          </HomeContextProvider>\n      </Suspense>\n    </>\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}